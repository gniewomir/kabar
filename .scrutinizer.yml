filter:
    paths:
        - Src/*
filter:
    excluded_paths:
        - Doc/*
        - vendor/*
build:
    environment:
        php:
            version: 5.5
    dependencies:
        before:
            - mysql -uroot -e "CREATE DATABASE IF NOT EXISTS kabar_tests;"
            - mysql -uroot -e "CREATE USER 'kabar'@'localhost' IDENTIFIED BY 'kabar';"
            - mysql -uroot -e "GRANT ALL ON kabar_tests.* TO 'kabar'@'localhost';"
    tests:
        override:
            - sh ./bin/run-unit-tests.sh
checks:
    php:
        fix_php_opening_tag: false
        remove_php_closing_tag: false
        one_class_per_file: true
        side_effects_or_types: true
        no_mixed_inline_html: false
        require_braces_around_control_structures: false
        php5_style_constructor: true
        no_global_keyword: false
        avoid_usage_of_logical_operators: true
        psr2_class_declaration: true
        no_underscore_prefix_in_properties: true
        no_underscore_prefix_in_methods: true
        blank_line_after_namespace_declaration: true
        single_namespace_per_use: true
        psr2_switch_declaration: true
        psr2_control_structure_declaration: false
        avoid_superglobals: true
        security_vulnerabilities: true
        no_exit: true
        use_self_instead_of_fqcn: true
        uppercase_constants: true
        simplify_boolean_return: true
        return_doc_comments: true
        return_doc_comment_if_not_inferrable: true
        properties_in_camelcaps: true
        prefer_while_loop_over_for_loop: true
        phpunit_assertions: true
        parameters_in_camelcaps: true
        parameter_doc_comments: true
        optional_parameters_at_the_end: true
        param_doc_comment_if_not_inferrable: true
        no_short_variable_names:
            minimum: '3'
        no_short_method_names:
            minimum: '3'
        no_goto: true
        newline_at_end_of_file: true
        more_specific_types_in_doc_comments: true
        fix_use_statements:
            remove_unused: true
            preserve_multiple: false
            preserve_blanklines: false
            order_alphabetically: true
        fix_line_ending: true
        encourage_single_quotes: true
        encourage_postdec_operator: true
        classes_in_camel_caps: true
        avoid_unnecessary_concatenation: true
        avoid_todo_comments: true
        avoid_perl_style_comments: true
        avoid_multiple_statements_on_same_line: true
        avoid_fixme_comments: true
        align_assignments: true
        symfony_request_injection: false
        avoid_entity_manager_injection: false
filter: {  }
coding_style:
    php:
        braces:
            classes_functions:
                class: new-line
                function: new-line
                closure: end-of-line
            if:
                opening: end-of-line
            for:
                opening: end-of-line
            while:
                opening: end-of-line
            do_while:
                opening: end-of-line
            switch:
                opening: end-of-line
            try:
                opening: end-of-line
        upper_lower_casing:
            keywords:
                general: lower
            constants:
                true_false_null: lower