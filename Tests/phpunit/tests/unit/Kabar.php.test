<?php

class KabarTests extends WP_UnitTestCase {

    /**
     * @dataProvider classNameProvider
     */
    public function testParseName_ShouldNormalizeClassName($class, $expected) {
        $kabar = new \kabar\Kabar();
        $class = $kabar->parseName($class);
        $this->assertEquals(
            $expected,
            $class
        );
    }

    /**
     * @dataProvider classNameProvider
     */
    public function testCreate_ShouldInstantiateClass($class, $expected, $rule) {
        $kabar = new \kabar\Kabar();
        if (!empty($rule)) $kabar->addRule($class, $rule);
        $this->assertInstanceOf(
            $expected,
            $kabar->create($class)
        );
    }

    /**
     * @dataProvider sharedObjectsClassNameProvider
     */
    public function testCreate_ShouldReturnSharedInstance($class)
    {
        $kabar    = new \kabar\Kabar();
        $kabar->addRule($class, array('shared'=>true));
        $expected = $kabar->create($class);
        $expected->prop = 'test';
        $tested   = $kabar->create($class);
        $this->assertTrue(
            ($expected === $tested)
        );
    }

    /**
     * @dataProvider sharedObjectsClassNameProvider
     */
    public function testMaybeShare_ShouldAddSharedRuleToClassesInSpecifedNamespaces($class)
    {
        $kabar = new \kabar\Kabar();
        $this->assertTrue($kabar->maybeShare($class));
    }

    /**
     * @dataProvider classNameProvider
     */
    public function testMaybeShare_ShouldNotAddSharedRuleToClassesInSpecifedNamespaces($class)
    {
        $kabar = new \kabar\Kabar();
        $this->assertFalse($kabar->maybeShare($class));
    }

    public function classNameProvider()
    {
        return array(
            // full names
            array('kabar\\Utility\\Template\\Template',   'kabar\\Utility\\Template\\Template', array()),
            array('kabar/Utility/Template/Template',      'kabar\\Utility\\Template\\Template', array()),
            array('\\kabar\\Utility\\Template\\Template', 'kabar\\Utility\\Template\\Template', array()),
            array('/kabar/Utility/Template/Template',     'kabar\\Utility\\Template\\Template', array()),
            array('kabar\\Module\\Sidebars\\Cleaner',     'kabar\\Module\\Sidebars\\Cleaner',   array()),
            // shortcuts
            array('kabar/Utility/Template',               'kabar\\Utility\\Template\\Template', array()),
            array('/kabar/Utility/Template',              'kabar\\Utility\\Template\\Template', array()),
            array('/kabar/Utility/Template/',             'kabar\\Utility\\Template\\Template', array()),
            array('kabar/Utility/Template/',              'kabar\\Utility\\Template\\Template', array())
        );
    }

    public function sharedObjectsClassNameProvider()
    {
        return array(
            array('kabar\\Module\\Scripts\\Scripts'),
            array('kabar\\Factory\\Template\\Template'),
            array('kabar\\Module\\Sidebars\\Sidebars'),
            array('kabar\\Module\\Pages\\Pages'),
            array('kabar\\Module\\Pages\\Pages'),
            array('kabar\\Module\\Pages\\Pages')
        );
    }
}
